package com.jxkj.fit_5a.conpoment.utils;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PathMeasure;
import android.graphics.RectF;
import android.util.Log;

import com.jxkj.fit_5a.R;
import com.jxkj.fit_5a.app.MainApplication;
import com.jxkj.fit_5a.base.UserImgBitmap;
import com.jxkj.fit_5a.conpoment.view.RobotView_Zx;
import com.jxkj.fit_5a.entity.MapDetailsBean;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * Created by AuthorName on Mar 23, 2021.
 * Copyright  2021 CompanyName. All rights reserved.
 * <p>
 * Generated by PaintCode
 * http://www.paintcodeapp.com
 *
 * @author AuthorName
 */
public class StyleKitName_Zx {


    public static PathMeasure mPathMeasure;
    public static List<float[]> mCurrentPosition = new ArrayList<>();
    public static List<float[]> mCurrentPosition_box = new ArrayList<>();

    private static class CacheFor_1100900Canvas {
        private static Paint paint = new Paint();
        private static Path _2Path = new Path();
        private static Path _3Path = new Path();
    }

    public interface StyleKitInterface{
        void getLeftTop(float x,float y);

    }

    public static void draw_1100900Canvas(Canvas canvas, List<Float[]> info, MapDetailsBean.ParamBean param,
                                          List<UserImgBitmap> mImgBitmap, List<MapDetailsBean.BoxsBean> box, Bitmap mBoxBit, Bitmap mBoxBit_G,
                                          StyleKitName_Zx.StyleKitInterface mStyleKitInterface) {
        float bl =  param.getReferenceWidth()/param.getReferenceHeight();//1.5
//        Log.w("--->>>>>", "屏幕宽:" + canvas.getWidth());//1920 1852*700 900*600
//        Log.w("--->>>>>", "屏幕高:" + canvas.getHeight());//1080
        //1080*1.5
        float yBl = canvas.getHeight()/param.getHeight();
        float xBl = (canvas.getHeight() * bl)/(param.getHeight()*bl);
        //矩形范围宽:1620   150
        float rectLeft = (canvas.getWidth() - canvas.getHeight() * bl) / 2;
        float rectRight = rectLeft + canvas.getHeight() * bl;
        StyleKitName_Zx.CacheFor_1100900Canvas._2Path.reset();
        StyleKitName_Zx.CacheFor_1100900Canvas._2Path.moveTo(info.get(0)[0]*xBl+rectLeft, info.get(0)[1]*yBl);
        for (int i = 0; i < info.size(); i++) {
            StyleKitName_Zx.CacheFor_1100900Canvas._2Path.lineTo(info.get(i)[0]*xBl+rectLeft, info.get(i)[1]*yBl);
        }
        StyleKitName_Zx.CacheFor_1100900Canvas._2Path.lineTo(info.get(0)[0]*xBl+rectLeft , info.get(0)[1]*yBl);
        StyleKitName_Zx.CacheFor_1100900Canvas.paint.reset();
        StyleKitName_Zx.CacheFor_1100900Canvas.paint.setFlags(Paint.ANTI_ALIAS_FLAG);
        StyleKitName_Zx.CacheFor_1100900Canvas.paint.setStrokeWidth(5f);
        canvas.save();
        StyleKitName_Zx.CacheFor_1100900Canvas.paint.setStyle(Paint.Style.STROKE);
        StyleKitName_Zx.CacheFor_1100900Canvas.paint.setColor(MainApplication.getContext().getResources().getColor(R.color.transparent));
        canvas.drawPath(StyleKitName_Zx.CacheFor_1100900Canvas._2Path, StyleKitName_Zx.CacheFor_1100900Canvas.paint);

        for(int i=0;i<box.size();i++){
            if(mCurrentPosition_box.size() <= box.size()){
                float[] f = new float[2];
                f[0] = info.get(0)[0] * xBl + rectLeft;
                f[1] = info.get(0)[1] * yBl;
                mCurrentPosition_box.add(f);
            }
            if(!box.get(i).getReceiveInfo().isHaving()){
                canvas.drawBitmap(mBoxBit_G,mCurrentPosition_box.get(i)[0] - 25, mCurrentPosition_box.get(i)[1] - 25, null);
            }else{
                canvas.drawBitmap(mBoxBit,mCurrentPosition_box.get(i)[0] - 25, mCurrentPosition_box.get(i)[1] - 25, null);
            }
        }

        for (int i=0;i<mImgBitmap.size();i++) {
            if(mCurrentPosition.size() <= mImgBitmap.size()){
                float[] f = new float[2];
                f[0] = info.get(0)[0] * xBl + rectLeft;
                f[1] = info.get(0)[1] * yBl;
                mCurrentPosition.add(f);
            }
            if(RobotView_Zx.userIds_ts.contains(mImgBitmap.get(i).getUserId()) || mImgBitmap.get(i).getUserId().equals(SharedUtils.getUserId()+"")){
                Bitmap bitmap = StringUtil.zoomImage(Objects.requireNonNull(mImgBitmap.get(i).getBitmap()), 60, 78);
                canvas.drawBitmap(bitmap, mCurrentPosition.get(i)[0] - 30, mCurrentPosition.get(i)[1] - 78, null);
            }
            if(mImgBitmap.get(i).getUserId().equals(SharedUtils.getUserId()+"")){
                mStyleKitInterface.getLeftTop(mCurrentPosition.get(i)[0] - 30,mCurrentPosition.get(i)[1] - 78);
            }
        }

        if (mPathMeasure == null) {
            mPathMeasure = new PathMeasure(StyleKitName_Zx.CacheFor_1100900Canvas._2Path, true);
        }

        canvas.restore();
    }


}